%%{init: {'theme': 'base', 'gitGraph': {'showCommitLabel': true}, 'flowchart': {'rankdir': 'TB'}} }%%
graph TD
    %% Definicija izgleda grafa
    classDef default fill:#f9f,stroke:#333,stroke-width:2px;
    classDef register fill:#fff,stroke:#000,stroke-width:1px;

    %% Definicija stanja
    IDLE[IDLE]:::doublecircle;
    PRIMI_PAKET[PRIMI_PAKET];
    POSALJI_CELIJU[POSALJI_CELIJU];
    CEKAJ_READY[CEKAJ_READY];
    PADDING[PADDING];

    %% Tranzicije izmeÄ‘u stanja
    IDLE -->|sink_sop| PRIMI_PAKET
    PRIMI_PAKET -->|sink_eop| POSALJI_CELIJU
    PRIMI_PAKET -->|!source_ready| CEKAJ_READY
    POSALJI_CELIJU -->|!last_cell & source_ready| PRIMI_PAKET
    POSALJI_CELIJU -->|!source_ready| CEKAJ_READY
    POSALJI_CELIJU -->|last_cell & source_ready| PADDING
    PADDING -->|padding_done & source_ready| IDLE
    PADDING -->|!source_ready| CEKAJ_READY
    CEKAJ_READY -->|source_ready| POSALJI_CELIJU

    %% Sekvencijalna logika
    state_update["state <= next_state"]:::circle
    padding_count_update["padding_count <= padding_next"]:::circle
    data_buffer_update["data_buffer <= data_buffer_next"]:::circle
    cell_size_assign["cell_size <= constant"]:::circle
    source_valid_assign["source_valid = (state == POSALJI_CELIJU or state == PADDING)"]:::circle
    source_sop_assign["source_sop = (state == POSALJI_CELIJU and data_buffer == initial_data_size)"]:::circle
    source_eop_assign["source_eop = (state == PADDING)"]:::circle
    source_data_assign["source_data = data_buffer[0:cell_size]"]:::circle
    sink_ready_assign["sink_ready = (state == IDLE or state == PRIMI_PAKET)"]:::circle
    padding_done_assign["padding_done = (padding_count == 0)"]:::circle
    last_cell_assign["last_cell = (data_buffer <= cell_size)"]:::circle

    %% Clock, Reset, and Enable
    clk_rst["clk\nreset\nenable"]:::diamond

    %% Connections between processes
    clk_rst -->|dotted| IDLE
    clk_rst -->|dotted| state_update
